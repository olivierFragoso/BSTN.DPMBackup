<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="3"
 universal="password">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="PTC.MfgModel.DefaultWorkunit_TT"
         description="Workunit template customized for Bridgestone"
         documentationContent=""
         effectiveThingPackage="RemoteThingWithTunnelsAndFileTransfer"
         homeMashup=""
         inheritedValueStream=""
         name="BSTN.Model.Workunit_TT"
         projectName="BSTN.DPM"
         tags=""
         thingPackage=""
         valueStream="PTC.OperationKPI.Automation_VS">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 dataShapeName=""
                 description="Configuration table used to identify managers that the building block should use"
                 isMultiRow="true"
                 name="ManagerConfiguration"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description="unique identifier for the manager that needs to be configured"
                             name="id"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             aspect.thingShape="PTC.Base.CommonManagement_TS"
                             baseType="THINGNAME"
                             description="Name of the Manager Thing to be configured"
                             name="managerThingName"
                             ordinal="2"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description=""
                 isMultiRow="true"
                 name="MashupConfiguration"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description="unique identifier used to identify the thing or mashup that is being configured"
                             name="id"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="MASHUPNAME"
                             description="name of the mashup to configure"
                             name="mashupName"
                             ordinal="2"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Configuration table for dynamic menus. Menu Items can be specified here and they will show up for the given menu name. "
                 isMultiRow="true"
                 name="MenuConfiguration"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description=""
                             name="menuItemMashupName"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description=""
                             name="menuName"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="INTEGER"
                             description="An optional field to indicate the ordering of the menu items"
                             name="menuOrderPreference"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description="Localization table key for the optional section that groups like menus together"
                             name="menuSectionKey"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description="Localization table key for the menu label"
                             name="menuTitleKey"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="PTC.Base.ComponentMenuConfiguration"
                             aspect.isPrimaryKey="false"
                             baseType="INFOTABLE"
                             description=""
                             name="submenu"
                             ordinal="6"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Reporting Settings"
                 isMultiRow="false"
                 name="ReportingConfiguration"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="NotReporting"
                             aspect.isPrimaryKey="true"
                             aspect.isReadOnly="false"
                             aspect.thingTemplate="ReportingStrategy"
                             baseType="THINGNAME"
                             description="Strategy to determine health"
                             name="reportingStrategy"
                             ordinal="1"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <reportingStrategy>
                            <![CDATA[
                            AlwaysOnReporting
                            ]]>
                            </reportingStrategy>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Configuration table for any Things that need to be configured. This allows for OOTB things to be customized, and the new version that should be used can be configured here"
                 isMultiRow="true"
                 name="ThingConfiguration"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description="unique identifier used to identify the thing or mashup that is being configured"
                             name="id"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="THINGNAME"
                             description="Name of the Thing entity or Mashup entity that is to be configured"
                             name="thingName"
                             ordinal="2"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="General Settings"
                 isMultiRow="false"
                 name="TunnelSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Enable Tunneling"
                             aspect.isNullable="true"
                             baseType="BOOLEAN"
                             description="Enable tunneling"
                             name="enableTunneling"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row></Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Tunneling Destinations"
                 isMultiRow="true"
                 name="Tunnels"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue=""
                             aspect.friendlyName="Application Path"
                             baseType="STRING"
                             description="Location of the client app that will use this tunnel"
                             name="appUri"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue=""
                             aspect.friendlyName="Description"
                             baseType="STRING"
                             description="A description of the tunnel"
                             name="description"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="127.0.0.1"
                             aspect.friendlyName="Host"
                             baseType="STRING"
                             description="Host or IP that this tunnel will connect to at the edge"
                             name="host"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="vnc"
                             aspect.friendlyName="Name"
                             baseType="STRING"
                             description="Name of the tunnel"
                             name="name"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="1.0"
                             aspect.friendlyName="Number of Connects"
                             baseType="NUMBER"
                             description="The number of connections required to establish this tunnel"
                             name="numConnects"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="5900.0"
                             aspect.friendlyName="Port"
                             baseType="NUMBER"
                             description="Port that this tunnel will connect to at the edge"
                             name="port"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="tcp"
                             aspect.friendlyName="Protocol"
                             baseType="STRING"
                             description="The protocol used over this tunnel"
                             name="proto"
                             ordinal="6"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="cachedChangeover"></AlertDefinitions>
            </AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="BSTN.NOTEvent.ChangeoverCache_DS"
                     aspect.isIndexed="false"
                     aspect.isPersistent="false"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="cachedChangeover"
                     ordinal="2"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions></ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="ValidatePTCProductionBlockExpired">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        if (logger.debugEnabled) {
                                        	logger.debug("Entering {}:ValidatePTCProductionBlockExpired with parameters productionBlockEndTime:{} productionBlockUid:{}", me.name, productionBlockEndTime, productionBlockUid);
                                        }
                                        try {
                                        	if (isReadySetProductionBlockExpired(productionBlockEndTime, productionBlockUid)) {
                                        		me.PTCLastExpiredProductionBlockUid = productionBlockUid;
                                                
                                                try {
                                                        var operationManager = Things["PTC.ProductionDashboard.Manager"];
                                                        let expiredProductionBlockInfo = operationManager.GetProductionBlockInfo({ thingName : me.name,
                                                                                            productionBlockUid: productionBlockUid});
                                                        if(expiredProductionBlockInfo.hasUnaccountedTime && expiredProductionBlockInfo.unaccountedTime < 11)
                                                        {
                                        
                                                            const CONVERT_MIN_TO_SEC = 60;
                                                            let reasonTreeGrid = Things["PTC.ReasonCodeImpl.Manager"].GetReasonTreeGrid({ 
                                                                                                                                    modelUid: expiredProductionBlockInfo.modelUid,
                                                                                                                                        materialMasterUid: expiredProductionBlockInfo.materialMasterUid,
                                                                                                                                        includeReasonTypeNames: "SmallStops"});
                                                            var query = {
                                                                        "filters": {
                                                                        "type": "EQ",
                                                                           "fieldName": "reasonCategoryName",
                                                                                       "value": "Small Stops"
                                                                                    }};
                                        
                                                            var param = { t: reasonTreeGrid,query: query};
                                                            var smallStopReason = Resources["InfoTableFunctions"].Query(param);           
                                        
                                                            let allEvent = operationManager.AddOrUpdateEvent({
                                                                impact: expiredProductionBlockInfo.unaccountedTime /* NUMBER [Required] */,
                                                                thingName: me.name /* THINGNAME [Required] ,*/,
                                                                reasonModelUid: expiredProductionBlockInfo.modelUid /* STRING */,
                                                                lossValue: expiredProductionBlockInfo.unaccountedTime * CONVERT_MIN_TO_SEC /* NUMBER */,
                                                                notes: "Smart Capacity:Automatic Update" /* STRING */,
                                                                productionBlockUid: expiredProductionBlockInfo.productionBlockUid /* STRING */,
                                                                materialMasterUid: expiredProductionBlockInfo.materialMasterUid /* STRING */,
                                                                quantity: expiredProductionBlockInfo.unaccountedTime /* NUMBER */,
                                                                jobOrderUid: expiredProductionBlockInfo.jobOrderUid /* STRING */,
                                                                reallocateFromGoodCount: false /* BOOLEAN */,
                                                                 eventTypeUid: smallStopReason[0].reasonTypeUid /* STRING */,            
                                                                reasonCategoryUid: smallStopReason[0].reasonCategoryUid /* STRING */,
                                                                eventCategoryUid: smallStopReason[0].reasonCategoryUid /* STRING */,
                                                                reasonTypeUid: smallStopReason[0].reasonTypeUid /* STRING */,
                                                                modelUid: expiredProductionBlockInfo.modelUid /* STRING */
                                                            });
                                                        }
                                                } catch(err) {
                                                    //swallowing the error here after logging it
                                                    logger.error("Thing [{}] Service [{}] error at line [{}] . Can not insert accounted speed loss automatically error: {}", me.name, err.fileName, err.lineNumber, err);            
                                                } 
                                            }
                                        } catch (err) {
                                        	logger.error("{} - {}:{} - {}", me.name, err.fileName, err.lineNumber, err);
                                        	throw ("An error has occurred. Please check the script logs for more details.");
                                        }
                                        
                                        function isReadySetProductionBlockExpired(productionBlockEndTime, productionBlockUid) {
                                        	let baseConditionValidation = me.PTCLastExpiredProductionBlockUid != productionBlockUid;
                                        
                                        	if (baseConditionValidation && me.IsPTCAutomationWorkUnit()) {
                                        		let timeDifferenceInMinutes = dateDifference(new Date(), productionBlockEndTime) / 60000;
                                        		return (me.PTCLastProcessedEventTimestamp >= productionBlockEndTime || timeDifferenceInMinutes > me.GetPTCMaxProductionBlockExpirationWaitTime());
                                        	}
                                        	return baseConditionValidation;
                                        }
                                        
                                        if (logger.debugEnabled) {
                                        	logger.debug("Exiting {}:ValidatePTCProductionBlockExpired", me.name);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <ImplementedShapes>
                <ImplementedShape
                 name="PTC.WorkMaster.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.JobOrder.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.ReasonCode.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.OperationKPI.AutomationEventsModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.Status.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.MaterialMaster.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.Shift.ModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.OperationKPI.ExecutionModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="PTC.OperationKPI.AnalysisModelLogic_TS"
                 type="ThingShape"></ImplementedShape>
            </ImplementedShapes>
            <SharedConfigurationTables>
                <ConfigurationTable
                 dataShapeName=""
                 description="Shared Remote Tunneling Settings"
                 isMultiRow="false"
                 name="SharedTunnelSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="false"
                             aspect.friendlyName="Enable Tunneling"
                             baseType="BOOLEAN"
                             description="Enable tunneling"
                             name="enableTunneling"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <enableTunneling>false</enableTunneling>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Shared Tunneling Destinations"
                 isMultiRow="true"
                 name="SharedTunnels"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Application Path"
                             baseType="STRING"
                             description="Location of the client app that will use this tunnel"
                             name="appUri"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Description"
                             baseType="STRING"
                             description="A description of the tunnel"
                             name="description"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Host"
                             baseType="STRING"
                             description="Host or IP that this tunnel will connect to at the edge"
                             name="host"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Name"
                             baseType="STRING"
                             description="Name of the tunnel"
                             name="name"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Number of Connects"
                             baseType="NUMBER"
                             description="The number of connections required to establish this tunnel"
                             name="numConnects"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Port"
                             baseType="NUMBER"
                             description="Port that this tunnel will connect to at the edge"
                             name="port"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Protocol"
                             baseType="STRING"
                             description="The protocol used over this tunnel"
                             name="proto"
                             ordinal="6"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
            </SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility></Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
