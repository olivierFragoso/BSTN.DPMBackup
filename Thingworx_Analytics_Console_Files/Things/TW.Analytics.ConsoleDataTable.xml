<?xml version="1.0" encoding="UTF-8"?>
<Entities
 majorVersion="9"
 minorVersion="3"
 universal="password">
    <Things>
        <Thing
         aspect.isExtension="true"
         description="DataTable for the ThingWorx Analytics Console"
         documentationContent=""
         effectiveThingPackage="DataTableThing"
         enabled="true"
         homeMashup=""
         identifier="bdeckel"
         inheritedValueStream=""
         name="TW.Analytics.ConsoleDataTable"
         projectName="Thingworx_Analytics_Console_Files"
         published="false"
         tags="TW:AnalyticsConsole"
         thingTemplate="DataTable"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Users"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="TW.AnalyticsManager.AnalyticsManagerOrgUnit"
                     type="Organization"></Principal>
                    <Principal
                     isPermitted="true"
                     name="TW_AnalyticServer_Organization"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 dataShapeName=""
                 description="Data Thing Configuration"
                 isMultiRow="false"
                 name="DataThingSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description="Persistence Provider Name"
                             name="persistenceProvider"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Data Shape Configuration"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Data Shape"
                             baseType="DATASHAPENAME"
                             description="Data shape"
                             name="dataShape"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"OpenInNewWindow":{"name":"OpenInNewWindow","aspects":{},"description":"","baseType":"BOOLEAN","ordinal":5},"TileLabel":{"name":"TileLabel","aspects":{},"description":"","baseType":"TEXT","ordinal":8},"TileMashupOrURL":{"name":"TileMashupOrURL","aspects":{},"description":"","baseType":"STRING","ordinal":9},"TileBackground":{"name":"TileBackground","aspects":{},"description":"","baseType":"STRING","ordinal":6},"TileTooltip":{"name":"TileTooltip","aspects":{},"description":"","baseType":"TEXT","ordinal":11},"TileOrder":{"name":"TileOrder","aspects":{},"description":"","baseType":"INTEGER","ordinal":10},"TileIcon":{"name":"TileIcon","aspects":{},"description":"","baseType":"STRING","ordinal":7},"IsMashup":{"name":"IsMashup","aspects":{"defaultValue":true},"description":"","baseType":"BOOLEAN","ordinal":1},"InAnalyticsConsole":{"name":"InAnalyticsConsole","aspects":{"defaultValue":true},"description":"","baseType":"BOOLEAN","ordinal":0},"LocalizedLabel":{"name":"LocalizedLabel","aspects":{},"description":"","baseType":"TEXT","ordinal":3},"LocalizedTooltip":{"name":"LocalizedTooltip","aspects":{},"description":"","baseType":"TEXT","ordinal":4},"key":{"name":"key","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":2}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            TW.Analytics.ConsoleDataShape
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 dataShapeName=""
                 description="Index Settings"
                 isMultiRow="true"
                 name="Indexes"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Index Field Names"
                             baseType="STRING"
                             description="Index fields"
                             name="fieldNames"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Index Name"
                             baseType="STRING"
                             description="Index name"
                             name="name"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="AddNewTile">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="BOOLEAN"
                             description=""
                             name="InAnalyticsConsole"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="BOOLEAN"
                             description=""
                             name="IsMashup"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="BOOLEAN"
                             description=""
                             name="OpenInNewWindow"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="TileBackground"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="TileIcon"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="TileLabel"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="TileMashupOrURL"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="100.0"
                             aspect.isRequired="true"
                             baseType="NUMBER"
                             description=""
                             name="TileOrder"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="TileTooltip"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GenerateInitialTiles">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetDataTableEntriesLocalized">
                        <ResultType
                         aspect.dataShape="TW.Analytics.ConsoleDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="QueryDataTableEntriesLocalized">
                        <ResultType
                         aspect.dataShape="TW.Analytics.ConsoleDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="QUERY"
                             description="Filter the results."
                             name="query"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="USERNAME"
                             description=""
                             name="userName"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="UpdateTileEntries">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="TW.Analytics.ConsoleDataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="values"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="AddNewTile">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var values = me.CreateValues();
                                        
                                        values.TileLabel = TileLabel; //TEXT
                                        values.TileBackground = TileBackground; //STRING
                                        values.TileIcon = TileIcon; //STRING
                                        values.OpenInNewWindow = OpenInNewWindow; //BOOLEAN
                                        values.InAnalyticsConsole = InAnalyticsConsole; //BOOLEAN
                                        values.TileMashupOrURL = TileMashupOrURL; //STRING
                                        values.TileTooltip = TileTooltip; //TEXT
                                        values.TileOrder = TileOrder; //INTEGER
                                        values.IsMashup = IsMashup; //BOOLEAN
                                        values.key = Date.now();
                                        
                                        var params = {
                                            sourceType: undefined /* STRING */,
                                            values: values /* INFOTABLE*/,
                                            location: undefined /* LOCATION */,
                                            source: undefined /* STRING */,
                                            tags: undefined /* TAGS */
                                        };
                                        
                                        // result: STRING
                                        var result = me.AddDataTableEntry(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GenerateInitialTiles">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var values = [
                                            {
                                                "TileBackground":"TW.Analytics.ConsoleGreen",
                                                "TileMashupOrURL":"TW_ML_Landing_Page_v1",
                                                "OpenInNewWindow":false,
                                                "TileLabel":"[[TW.Analytics.AnalyticsBuilderLabel]]",
                                                "TileOrder":10,
                                                "key": "10",
                                                "TileIcon":"TW.Analytics.AnalyticsLogo",
                                                "InAnalyticsConsole":true,
                                                "IsMashup":true,
                                                "TileTooltip":"[[TW.Analytics.AnalyticsBuilderLabel]]"
                                            },
                                            {
                                                "TileBackground":"TW.Analytics.ConsoleGreen",
                                                "TileMashupOrURL":"TW.AnalysisServices.AnalysisMainMashup",
                                                "OpenInNewWindow":false,
                                                "TileLabel":"[[TW.Analytics.AnalysisServicesLable]]",
                                                "TileOrder":20,
                                                "key": "20",
                                                "TileIcon":"TW.AanalysisServices.TileLogo",
                                                "InAnalyticsConsole":true,
                                                "IsMashup":true,
                                                "TileTooltip":"[[TW.Analytics.AnalysisServicesLable]]"
                                            },
                                            {
                                                "TileBackground":"TW.Analytics.ConsoleGreen",
                                                "TileMashupOrURL":"TW_Edge_Landing_Page",
                                                "OpenInNewWindow":false,
                                                "TileLabel":"[[TW.Edge.Label]]",
                                                "TileOrder":30,
                                                "key": "30",
                                                "TileIcon":"TW.AanalysisServices.TileLogo",
                                                "InAnalyticsConsole":true,
                                                "IsMashup":true,
                                                "TileTooltip":""
                                            },
                                            {
                                                "TileBackground":"TW.Analytics.ConsolePurple",
                                                "TileMashupOrURL":"http://support.ptc.com/help/thingworx_hc/thingworx_analytics_8/",
                                                "OpenInNewWindow":true,
                                                "TileLabel":"[[TW.Analytics.Help Center]]",
                                                "TileOrder":90,
                                                "key": "90",
                                                "TileIcon":"TW.Analytics.HelpTileLogo",
                                                "InAnalyticsConsole":true,
                                                "IsMashup":false,
                                                "TileTooltip":"[[TW.Analytics.Help Center]]"
                                            },
                                            {
                                                "TileBackground":"TW.Analytics.ConsoleGray",
                                                "TileMashupOrURL":"TW.Analytics.AddorRemoveTiles",
                                                "OpenInNewWindow":false,
                                                "TileLabel":"[[TW.Analytics.Add/Remove Analytics Tiles]]",
                                                "TileOrder":100,
                                                "key": "100",
                                                "TileIcon":"TW.Analytics.AddRemoveTile",
                                                "InAnalyticsConsole":true,
                                                "IsMashup":true,
                                                "TileTooltip":"[[TW.Analytics.Add/Remove Analytics Tiles]]"
                                            }
                                        ];
                                        
                                        // if we currently have 0 rows, then populate ourself with links
                                        var result = me.GetDataTableEntries({
                                            maxItems: 1
                                        });
                                        
                                        if (result.rows.length == 0) {
                                            var rows = me.CreateValues();
                                        
                                            values.map(function(value) {
                                                rows.AddRow(value);
                                            });
                                        
                                            me.AddDataTableEntries({
                                                values: rows
                                            });
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetDataTableEntriesLocalized">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                            maxItems: undefined,
                                            query: {"sorts":[{"fieldName":"TileOrder","isAscending":true}]}
                                        };
                                        
                                        var result = me.QueryDataTableEntries(params);
                                        
                                        var x = result.rows.length;
                                        
                                        while (x--) {
                                            var row = result.rows[x];
                                            if (row.IsMashup && !Mashups[row.TileMashupOrURL]) {
                                                result.RemoveRow(x);
                                            }
                                            else {
                                                var label = row.TileLabel;
                                                row.LocalizedLabel = label;
                                                if (label && label.indexOf("[[") == 0) {
                                                    try {
                                                        row.LocalizedLabel = Resources["RuntimeLocalizationFunctions"].GetEffectiveToken({token: label.substring(2, label.length -2)});
                                                    } catch (e) {}
                                                }
                                                var tooltip = row.TileTooltip;
                                                row.LocalizedTooltip = tooltip || '';
                                                if (tooltip && tooltip.indexOf("[[") == 0) {
                                                    try {
                                                      row.LocalizedTooltip = Resources["RuntimeLocalizationFunctions"].GetEffectiveToken({token: tooltip.substring(2, tooltip.length -2)});
                                                      } catch (e) {}
                                                }
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="QueryDataTableEntriesLocalized">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var serviceName = "QueryDataTableEntriesLocalized";
                                        logger.info(serviceName+": Executing");
                                        logger.info(serviceName+": query="+query);
                                        logger.info(serviceName+": userName="+userName);
                                        
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName : "InfoTable",
                                        	dataShapeName : "TW.Analytics.ConsoleDataShape"
                                        });
                                        
                                        if (userName && userName.trim().length > 0)
                                        {
                                            // result: INFOTABLE dataShape: EntityList
                                            var groups = Users[userName].GetGroups();
                                            
                                            // Check if user can use Builder
                                            var infoTable = Resources["InfoTableFunctions"].EQFilter({
                                                t        : groups,
                                                value    : "TW_AnalyticServer_Users",
                                                fieldName: "name"
                                            });
                                            var buildUser = (infoTable.getRowCount()==0)?false:true;
                                        
                                            // Check if user Add/Remove Tiles (must be in TW_AnalyticServer_Admin user group)
                                            var infoTable = Resources["InfoTableFunctions"].EQFilter({
                                                t        : groups,
                                                value    : "TW_AnalyticServer_Admin",
                                                fieldName: "name"
                                            });
                                            var serverAdmin = (infoTable.getRowCount()==0)?false:true;
                                        
                                            // Check if user can use Manager
                                            infoTable = Resources["InfoTableFunctions"].EQFilter({
                                                t        : groups,
                                                value    : "TW.AnalyticsManager.Admin",
                                                fieldName: "name"
                                            });
                                            var managerUser = (infoTable.getRowCount()==0)?false:true;
                                        
                                        
                                            result = me.QueryDataTableEntries({query: query});
                                            var x = result.rows.length;
                                        
                                            var hasUpdate = me.CheckPermission({
                                                type: 'ServiceInvoke',
                                                name: 'UpdateDataTableEntry'
                                            });
                                        
                                            var hasAdmin = me.CheckDesignTimePermission({
                                                type: 'Create'
                                            });
                                        
                                            while (x--)
                                            {
                                                var row = result.rows[x];
                                                //logger.info(serviceName+": Mashup="+row.TileMashupOrURL+", hasAdmin="+hasAdmin+", buildUser="+buildUser+", managerUser="+managerUser+", serverAdmin="+serverAdmin);
                                                if ( (row.IsMashup && !Mashups[row.TileMashupOrURL])
                                                  || (row.TileMashupOrURL === '/Thingworx/Composer/' && !hasAdmin)
                                                  || (row.TileMashupOrURL === 'TW.Analytics.AddorRemoveTiles' && !serverAdmin))
                                                { // Change !hasUpdate to !hasAdmin for LYNX-159
                                                    result.RemoveRow(x);
                                                }
                                                else if (row.TileMashupOrURL === "TW_ML_Landing_Page_v1" && !buildUser)
                                                {
                                                    result.RemoveRow(x);
                                                }
                                                else if (row.TileMashupOrURL === "TW.AnalysisServices.AnalysisMainMashup" && !managerUser)
                                                {
                                                    result.RemoveRow(x);
                                                }
                                                else
                                                {
                                                    var label = row.TileLabel;
                                                    row.LocalizedLabel = label;
                                                    if (label && label.indexOf("[[") == 0) {
                                                       try {
                                                           row.LocalizedLabel = Resources["RuntimeLocalizationFunctions"].GetEffectiveToken({
                                                               token: label.substring(2, label.length -2)});
                                                        } catch (e) {}
                                                    }
                                                    var tooltip = row.TileTooltip;
                                                    row.LocalizedTooltip = tooltip || '';
                                                    if (tooltip && tooltip.indexOf("[[") == 0) {
                                                        try {
                                                            row.LocalizedTooltip = Resources["RuntimeLocalizationFunctions"].GetEffectiveToken(
                                                                { token: tooltip.substring(2, tooltip.length -2) });
                                                        } catch (e) {}
                                                    }
                                                }
                                            }
                                        }
                                        logger.info(serviceName+": Completed");
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="UpdateTileEntries">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        if (values && values.getRowCount() > 0) {
                                            var params = {
                                        		values: values /* INFOTABLE*/,
                                        	};
                                        	me.UpdateDataTableEntries(params);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     description=""
                     enabled="true"
                     eventName="ThingStart"
                     name="Event.ThingStart"
                     source=""
                     sourceProperty=""
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Event.ThingStart">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 dataShapeName=""
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            me.GenerateInitialTiles();
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
